C        Generated by TAPENADE     (INRIA, Ecuador team)
C  Tapenade 3.16 (develop) - 15 Jan 2021 14:26
C
C  Differentiation of get_res in reverse (adjoint) mode (with options i4 dr8 r8):
C   gradient     of useful results: alfa beta vinf xyzref rv1 rv2
C                rv rc gam res wv_gam
C   with respect to varying inputs: ysym zsym alfa beta vinf conval
C                xyzref mach rv1 rv2 rv rc chordv enc gam res wv_gam
C   RW status of diff variables: ysym:out zsym:out alfa:in-out
C                beta:in-out vinf:in-out conval:out xyzref:in-out
C                mach:zero rv1:incr rv2:incr rv:incr rc:incr chordv:out
C                enc:out gam:incr res:in-zero wv_gam:in-out
Csubroutine solve_rhs
      SUBROUTINE GET_RES_B()
      INCLUDE 'AVL.INC'
      INCLUDE 'AVL_ad_seeds.inc'
      REAL betm
      INTRINSIC SQRT
      INTEGER i
      INTEGER ii1
      CALL SET_PAR_AND_CONS(nitmax, irun)
C Do not use this routine in the sovler
C IF(.NOT.LAIC) THEN
C      CALL build_AIC
C end if
C CALL SETUP
C---  
      ! CALL PUSHREAL8ARRAY(wc_gam, 3*nvmax**2)
      ! CALL BUILD_AIC()
      amach = mach
      betm = SQRT(1.0 - amach**2)
C---- set VINF() vector from initial ALFA,BETA
      CALL VINFAB()
C
      DO ii1=1,nvmax
        rhs_diff(ii1) = 0.D0
      ENDDO
C$BWD-OF II-LOOP 
      DO i=1,nvor
        rhs_diff(i) = rhs_diff(i) - res_diff(i)
      ENDDO
      CALL MAT_PROD_B(aicn, aicn_diff, gam, gam_diff, nvor, res, 
     +                res_diff)
      DO ii1=1,6000
        res_diff(ii1) = 0.D0
      ENDDO
      CALL SET_VEL_RHS_B()
      CALL VINFAB_B()
      ysym_diff = 0.D0
      zsym_diff = 0.D0
      DO ii1=1,nvmax
        chordv_diff(ii1) = 0.D0
      ENDDO
      CALL VVOR_B(betm, iysym, ysym, ysym_diff, izsym, zsym, zsym_diff, 
     +            vrcore, nvor, rv1, rv1_diff, rv2, rv2_diff, nsurfv, 
     +            chordv, chordv_diff, nvor, rv, rv_diff, nsurfv, .true.
     +            , wv_gam, wv_gam_diff, nvmax)
      ! CALL POPREAL8ARRAY(wc_gam, 3*nvmax**2)
      CALL BUILD_AIC_B()
      CALL SET_PAR_AND_CONS_B(nitmax, irun)
      mach_diff = 0.D0
      END

